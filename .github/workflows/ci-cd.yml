name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

env:
  NODE_VERSION: '22.x'

jobs:
  # Lint and Type Check
  lint-and-typecheck:
    name: 🔍 Lint & Type Check
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📥 Install dependencies
        run: npm ci

      - name: 🔍 Run ESLint
        run: npm run lint

      - name: 🔍 Type check
        run: npm run typecheck

  # Build
  build:
    name: 🏗️ Build
    runs-on: ubuntu-latest
    needs: lint-and-typecheck

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📥 Install dependencies
        run: npm ci

      - name: 🏗️ Build projects
        run: npm run build

      - name: 📦 Archive build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: |
            apps/*/dist
            apps/*/.next
          retention-days: 1

  # Tests
  test:
    name: 🧪 Tests
    runs-on: ubuntu-latest
    needs: lint-and-typecheck

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📥 Install dependencies
        run: npm ci

      - name: 🧪 Run unit tests
        run: npm run test

      - name: 📊 Upload coverage reports
        uses: codecov/codecov-action@v4
        if: always()
        with:
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella

  # Security Audit
  security:
    name: 🛡️ Security Audit
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 🛡️ Run security audit
        run: npm audit --audit-level=moderate

      - name: 🔍 Run Snyk security scan
        uses: snyk/actions/node@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=medium

  # Deploy (only on main branch)
  deploy:
    name: 🚀 Deploy
    runs-on: ubuntu-latest
    needs: [build, test, security]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    environment:
      name: production
      url: https://my-wa-api.com

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📥 Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-files

      - name: 🚀 Deploy to production
        run: |
          echo "🚀 Deploying to production environment..."
          # Add your deployment commands here
          # Example: rsync, docker push, vercel deploy, etc.

      - name: 🔔 Notify deployment status
        if: always()
        run: |
          echo "✅ Deployment completed successfully!"
          # Add notification logic (Slack, Discord, etc.)
