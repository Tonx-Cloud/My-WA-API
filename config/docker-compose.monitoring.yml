# ConfiguraÃ§Ã£o Docker Compose para Monitoramento
# Stack Prometheus + Grafana + Alertmanager

version: '3.8'

services:
  # Prometheus - Coleta de mÃ©tricas
  prometheus:
    image: prom/prometheus:latest
    container_name: my-wa-api-prometheus
    restart: unless-stopped

    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=30d'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'

    ports:
      - '${PROMETHEUS_PORT:-9090}:9090'

    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./monitoring/prometheus/rules:/etc/prometheus/rules:ro
      - prometheus_data:/prometheus

    environment:
      TZ: America/Sao_Paulo

    networks:
      - monitoring
      - my-wa-api-network

    labels:
      - 'app=my-wa-api'
      - 'component=monitoring'

  # Grafana - VisualizaÃ§Ã£o
  grafana:
    image: grafana/grafana:latest
    container_name: my-wa-api-grafana
    restart: unless-stopped

    ports:
      - '${GRAFANA_PORT:-3030}:3000'

    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards:ro

    environment:
      TZ: America/Sao_Paulo
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_ADMIN_PASSWORD:-admin123}
      GF_SECURITY_ADMIN_USER: ${GRAFANA_ADMIN_USER:-admin}
      GF_INSTALL_PLUGINS: grafana-clock-panel,grafana-simple-json-datasource
      GF_SECURITY_ALLOW_EMBEDDING: 'true'
      GF_AUTH_ANONYMOUS_ENABLED: 'false'
      GF_SMTP_ENABLED: ${GF_SMTP_ENABLED:-false}
      GF_SMTP_HOST: ${SMTP_HOST:-}
      GF_SMTP_USER: ${SMTP_USER:-}
      GF_SMTP_PASSWORD: ${SMTP_PASS:-}
      GF_SMTP_FROM_ADDRESS: ${EMAIL_FROM:-}

    depends_on:
      - prometheus

    networks:
      - monitoring

    labels:
      - 'app=my-wa-api'
      - 'component=monitoring'

  # Node Exporter - MÃ©tricas do sistema
  node-exporter:
    image: prom/node-exporter:latest
    container_name: my-wa-api-node-exporter
    restart: unless-stopped

    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'

    ports:
      - '9100:9100'

    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro

    environment:
      TZ: America/Sao_Paulo

    networks:
      - monitoring

    labels:
      - 'app=my-wa-api'
      - 'component=monitoring'

  # cAdvisor - MÃ©tricas de containers
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: my-wa-api-cadvisor
    restart: unless-stopped

    ports:
      - '8080:8080'

    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro

    environment:
      TZ: America/Sao_Paulo

    privileged: true

    networks:
      - monitoring

    labels:
      - 'app=my-wa-api'
      - 'component=monitoring'

  # Redis Exporter - MÃ©tricas do Redis
  redis-exporter:
    image: oliver006/redis_exporter:latest
    container_name: my-wa-api-redis-exporter
    restart: unless-stopped

    ports:
      - '9121:9121'

    environment:
      TZ: America/Sao_Paulo
      REDIS_ADDR: 'redis://redis:6379'
      REDIS_PASSWORD: ''

    networks:
      - monitoring
      - my-wa-api-network

    labels:
      - 'app=my-wa-api'
      - 'component=monitoring'

  # Postgres Exporter - MÃ©tricas do PostgreSQL
  postgres-exporter:
    image: prometheuscommunity/postgres-exporter:latest
    container_name: my-wa-api-postgres-exporter
    restart: unless-stopped

    ports:
      - '9187:9187'

    environment:
      TZ: America/Sao_Paulo
      DATA_SOURCE_NAME: 'postgresql://${DB_USER:-mywaapi}:${DB_PASS}@postgres:5432/${DB_NAME:-mywaapi}?sslmode=disable'

    networks:
      - monitoring
      - my-wa-api-network

    labels:
      - 'app=my-wa-api'
      - 'component=monitoring'

  # Alertmanager - Gerenciamento de alertas
  alertmanager:
    image: prom/alertmanager:latest
    container_name: my-wa-api-alertmanager
    restart: unless-stopped

    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
      - '--web.external-url=http://localhost:9093'

    ports:
      - '9093:9093'

    volumes:
      - ./monitoring/alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
      - alertmanager_data:/alertmanager

    environment:
      TZ: America/Sao_Paulo

    networks:
      - monitoring

    labels:
      - 'app=my-wa-api'
      - 'component=monitoring'

  # Blackbox Exporter - Testes de conectividade
  blackbox-exporter:
    image: prom/blackbox-exporter:latest
    container_name: my-wa-api-blackbox-exporter
    restart: unless-stopped

    ports:
      - '9115:9115'

    volumes:
      - ./monitoring/blackbox/blackbox.yml:/etc/blackbox_exporter/config.yml:ro

    environment:
      TZ: America/Sao_Paulo

    networks:
      - monitoring
      - my-wa-api-network

    labels:
      - 'app=my-wa-api'
      - 'component=monitoring'

volumes:
  prometheus_data:
    driver: local
    labels:
      - 'app=my-wa-api'
      - 'component=monitoring'

  grafana_data:
    driver: local
    labels:
      - 'app=my-wa-api'
      - 'component=monitoring'

  alertmanager_data:
    driver: local
    labels:
      - 'app=my-wa-api'
      - 'component=monitoring'

networks:
  monitoring:
    driver: bridge
    labels:
      - 'app=my-wa-api'
      - 'component=monitoring'

  my-wa-api-network:
    external: true