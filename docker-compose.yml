services:
  # API Backend
  api:
    build:
      context: .
      dockerfile: apps/api/Dockerfile
      args:
        - BUILDKIT_INLINE_CACHE=1
    env_file: .env
    ports:
      - '3000:3000'
    environment:
      - NODE_ENV=development
      - PORT=3000
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
      - FRONTEND_URL=http://localhost:3001
      - DATABASE_URL=./data/database.sqlite
      - LOG_LEVEL=info
      - REDIS_URL=redis://redis:6379
      - NPM_CONFIG_REGISTRY=https://registry.npmjs.org/
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./sessions:/app/sessions
    depends_on:
      - redis
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:3000/health']
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend Web
  web:
    build:
      context: .
      dockerfile: apps/web/Dockerfile
      args:
        - BUILDKIT_INLINE_CACHE=1
    env_file: .env
    ports:
      - '3001:3001'
    environment:
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL:-http://localhost:3000}
      - NEXT_PUBLIC_SOCKET_URL=${NEXT_PUBLIC_SOCKET_URL:-http://localhost:3000}
      - NEXT_PUBLIC_APP_NAME=${NEXT_PUBLIC_APP_NAME:-My-wa-API}
      - NEXT_PUBLIC_APP_VERSION=${NEXT_PUBLIC_APP_VERSION:-2.0.0}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      - NEXTAUTH_URL=${NEXTAUTH_URL:-http://localhost:3001}
      - DOCKER_ENV=true
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - NPM_CONFIG_REGISTRY=https://registry.npmjs.org/
    depends_on:
      - api
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:3001/api/health']
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis para filas (futura implementaÃ§Ã£o)
  redis:
    image: redis:7-alpine
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - app-network

  # PostgreSQL (para produÃ§Ã£o - opcional)
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=mywaapi
      - POSTGRES_USER=mywaapi
      - POSTGRES_PASSWORD=your-secure-password
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - app-network

volumes:
  redis_data:
  postgres_data:

networks:
  app-network:
    driver: bridge