version: '3.8'

services:
  # API Backend
  api:
    build:
      context: .
      dockerfile: apps/api/Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
      - FRONTEND_URL=http://localhost:3001
      - DATABASE_URL=./data/database.sqlite
      - LOG_LEVEL=info
      - REDIS_URL=redis://redis:6379
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./sessions:/app/sessions
    depends_on:
      - redis
    restart: unless-stopped
    networks:
      - app-network

  # Frontend Web
  web:
    build:
      context: .
      dockerfile: apps/web/Dockerfile
    ports:
      - "3001:3001"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:3000
      - NEXT_PUBLIC_SOCKET_URL=http://localhost:3000
      - NEXT_PUBLIC_APP_NAME=My-wa-API
      - NEXT_PUBLIC_APP_VERSION=2.0.0
    depends_on:
      - api
    restart: unless-stopped
    networks:
      - app-network

  # Redis para filas (futura implementação)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - app-network

  # PostgreSQL (para produção - opcional)
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=mywaapi
      - POSTGRES_USER=mywaapi
      - POSTGRES_PASSWORD=your-secure-password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - app-network

volumes:
  redis_data:
  postgres_data:

networks:
  app-network:
    driver: bridge
