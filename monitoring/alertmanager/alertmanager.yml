# Configura√ß√£o do Alertmanager para My-WA-API
# Gerenciamento e roteamento de alertas

global:
  # Configura√ß√µes SMTP para email
  smtp_smarthost: '${SMTP_HOST}:${SMTP_PORT}'
  smtp_from: '${EMAIL_FROM}'
  smtp_auth_username: '${SMTP_USER}'
  smtp_auth_password: '${SMTP_PASS}'
  
  # URLs base para templates
  slack_api_url: '${SLACK_WEBHOOK_URL}'

# Templates customizados
templates:
  - '/etc/alertmanager/templates/*.tmpl'

# Configura√ß√£o de rotas
route:
  # Receptor padr√£o
  receiver: 'default'
  
  # Tempo para agrupar alertas
  group_wait: 10s
  group_interval: 5m
  repeat_interval: 4h
  
  # Agrupamento de alertas
  group_by: ['alertname', 'severity', 'service']
  
  # Rotas espec√≠ficas
  routes:
    # Alertas cr√≠ticos - notifica√ß√£o imediata
    - match:
        severity: critical
      receiver: 'critical-alerts'
      group_wait: 0s
      group_interval: 1m
      repeat_interval: 30m
      routes:
        # API cr√≠tica - Slack + Email + SMS
        - match:
            service: api
          receiver: 'api-critical'
        # Banco cr√≠tico - DBA team
        - match:
            service: database
          receiver: 'database-critical'
    
    # Alertas de warning - notifica√ß√£o agrupada
    - match:
        severity: warning
      receiver: 'warning-alerts'
      group_wait: 30s
      group_interval: 10m
      repeat_interval: 2h
    
    # Alertas de infraestrutura
    - match:
        component: system
      receiver: 'infrastructure-alerts'
      group_interval: 15m
    
    # Alertas de WhatsApp
    - match:
        service: whatsapp
      receiver: 'whatsapp-alerts'
      group_interval: 5m

# Configura√ß√µes de inibi√ß√£o
inhibit_rules:
  # Se API est√° down, n√£o alertar sobre lat√™ncia
  - source_match:
      alertname: 'APIDown'
    target_match:
      alertname: 'APIHighLatency'
    equal: ['service']
  
  # Se container est√° reiniciando, n√£o alertar sobre sa√∫de
  - source_match:
      alertname: 'ContainerRestarting'
    target_match_re:
      alertname: '.*Down'
    equal: ['instance']

# Configura√ß√µes de receptores
receivers:
  # Receptor padr√£o (silencioso)
  - name: 'default'
    webhook_configs:
      - url: 'http://localhost:9093/api/v1/silence'
        send_resolved: true

  # Alertas cr√≠ticos - m√∫ltiplos canais
  - name: 'critical-alerts'
    slack_configs:
      - api_url: '${SLACK_WEBHOOK_URL}'
        channel: '#alerts-critical'
        title: 'üö® ALERTA CR√çTICO - My-WA-API'
        text: |
          *Alerta:* {{ .GroupLabels.alertname }}
          *Severidade:* {{ .GroupLabels.severity }}
          *Servi√ßo:* {{ .GroupLabels.service }}
          *Descri√ß√£o:* {{ range .Alerts }}{{ .Annotations.description }}{{ end }}
          *Hor√°rio:* {{ range .Alerts }}{{ .StartsAt.Format "15:04:05 02/01/2006" }}{{ end }}
        send_resolved: true
        title_link: 'http://localhost:3030/d/my-wa-api'
    
    email_configs:
      - to: '${ALERT_EMAIL_CRITICAL}'
        subject: 'üö® ALERTA CR√çTICO - My-WA-API - {{ .GroupLabels.alertname }}'
        body: |
          Alerta cr√≠tico detectado no My-WA-API:
          
          Alerta: {{ .GroupLabels.alertname }}
          Severidade: {{ .GroupLabels.severity }}
          Servi√ßo: {{ .GroupLabels.service }}
          
          Detalhes:
          {{ range .Alerts }}
          - {{ .Annotations.summary }}
          - {{ .Annotations.description }}
          - In√≠cio: {{ .StartsAt.Format "15:04:05 02/01/2006" }}
          {{ end }}
          
          Dashboard: http://localhost:3030/d/my-wa-api
          Alertmanager: http://localhost:9093
        send_resolved: true

  # Alertas espec√≠ficos da API
  - name: 'api-critical'
    slack_configs:
      - api_url: '${SLACK_WEBHOOK_URL}'
        channel: '#api-alerts'
        title: 'üî• API CR√çTICA - My-WA-API'
        text: |
          *API EM ESTADO CR√çTICO!*
          
          {{ range .Alerts }}
          *Problema:* {{ .Annotations.summary }}
          *Detalhes:* {{ .Annotations.description }}
          *In√≠cio:* {{ .StartsAt.Format "15:04:05 02/01/2006" }}
          {{ end }}
          
          <http://localhost:3030/d/api-dashboard|üìä Dashboard API>
          <http://localhost:9093|üö® Alertmanager>
        send_resolved: true
        color: 'danger'
    
    webhook_configs:
      - url: '${DISCORD_WEBHOOK_URL}/slack'
        send_resolved: true

  # Alertas de banco de dados
  - name: 'database-critical'
    slack_configs:
      - api_url: '${SLACK_WEBHOOK_URL}'
        channel: '#database-alerts'
        title: 'üíæ BANCO CR√çTICO - My-WA-API'
        text: |
          *PROBLEMA NO BANCO DE DADOS!*
          
          {{ range .Alerts }}
          *Problema:* {{ .Annotations.summary }}
          *Detalhes:* {{ .Annotations.description }}
          {{ end }}
        send_resolved: true
        color: 'danger'

  # Alertas de warning
  - name: 'warning-alerts'
    slack_configs:
      - api_url: '${SLACK_WEBHOOK_URL}'
        channel: '#alerts'
        title: '‚ö†Ô∏è Alerta - My-WA-API'
        text: |
          *Alerta de aten√ß√£o:*
          
          {{ range .Alerts }}
          ‚Ä¢ {{ .Annotations.summary }}
          {{ end }}
        send_resolved: true
        color: 'warning'

  # Alertas de infraestrutura
  - name: 'infrastructure-alerts'
    slack_configs:
      - api_url: '${SLACK_WEBHOOK_URL}'
        channel: '#infrastructure'
        title: 'üñ•Ô∏è Infraestrutura - My-WA-API'
        text: |
          *Alerta de infraestrutura:*
          
          {{ range .Alerts }}
          ‚Ä¢ {{ .Annotations.summary }}: {{ .Annotations.description }}
          {{ end }}
        send_resolved: true

  # Alertas do WhatsApp
  - name: 'whatsapp-alerts'
    slack_configs:
      - api_url: '${SLACK_WEBHOOK_URL}'
        channel: '#whatsapp'
        title: 'üí¨ WhatsApp - My-WA-API'
        text: |
          *Alerta do WhatsApp:*
          
          {{ range .Alerts }}
          ‚Ä¢ {{ .Annotations.summary }}
          {{ end }}
        send_resolved: true
        color: 'good'
